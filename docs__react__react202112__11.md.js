(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[20],{Dp7f:function(e,n,t){"use strict";t.r(n);var l=t("q1tI"),a=t.n(l),d=t("dEAq"),r=t("H1Ra"),o=a.a.memo((e=>{e.demos;return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"markdown"},a.a.createElement("h1",{id:"\u5b9e\u73b0dom-diff"},a.a.createElement(d["AnchorLink"],{to:"#\u5b9e\u73b0dom-diff","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:"icon icon-link"})),"\u5b9e\u73b0DOM-DIFF"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("p",null,"\u53ea\u5bf9\u540c\u7ea7\u8282\u70b9\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5982\u679cDOM\u8282\u70b9\u8de8\u5c42\u7ea7\u79fb\u52a8\uff0c\u5219React\u4e0d\u4f1a\u590d\u7528")),a.a.createElement("li",null,a.a.createElement("p",null,"\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u4f1a\u4ea7\u51fa\u4e0d\u540c\u7684\u7ed3\u6784 \uff0c\u4f1a\u9500\u6bc1\u8001\u7ed3\u6784\uff0c\u521b\u5efa\u65b0\u7ed3\u6784")),a.a.createElement("li",null,a.a.createElement("p",null,"\u53ef\u4ee5\u901a\u8fc7",a.a.createElement("code",null,"key"),"\u6807\u8bc6\u79fb\u52a8\u7684\u5143\u7d20"))),a.a.createElement("p",null,a.a.createElement("img",{src:"http://wuxiao-tech-doc.oss-cn-hangzhou.aliyuncs.com/2022-01-30-080140.png",alt:"domdiff_1626417725773"})),a.a.createElement("p",null,"src\\index.js"),a.a.createElement(r["a"],{code:"import React from './react';\nimport ReactDOM from './react-dom';\nclass Counter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: ['A', 'B', 'C', 'D', 'E', 'F']\n        }\n    }\n    handleClick = () => {\n        this.setState({\n            list: ['A', 'C', 'E', 'B', 'G']\n        });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <ul>\n                    {\n                        this.state.list.map(item => <li key={item}>{item}</li>)\n                    }\n\n                </ul>\n                <button onClick={this.handleClick}>+</button>\n            </React.Fragment>\n        )\n    }\n}\nReactDOM.render(<Counter />, document.getElementById('root'));",lang:"js"}),a.a.createElement("p",null,"src\\constants.js"),a.a.createElement(r["a"],{code:"export const REACT_ELEMENT = Symbol.for('react.element')\n\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref')\n\nexport const REACT_TEXT = Symbol.for('react.text')\n\n+ export const PLACEMENT = 'PLACEMENT'\n+ export const MOVE = 'MOVE'",lang:"diff"}),a.a.createElement("p",null,"src\\react-dom.js"),a.a.createElement(r["a"],{code:'+ import {MOVE, PLACEMENT, REACT_FORWARD_REF_TYPE, REACT_TEXT} from "./constants";\nimport {addEvent} from "./event";\n\n// ...\n\nfunction reconcileChildren(children, parentDOM) {\n  children.forEach((child, index) => {\n+    child.mountIndex = index\n    mount(child, parentDOM)\n  })\n}\n\n// ...\n/**\n *\n * @param parentDOM \u7236DOM\n * @param oldVChildren \u8001\u7684\u865a\u62dfDOM\u6570\u7ec4\n * @param newVChildren \u65b0\u7684\u865a\u62dfDOM\u6570\u7ec4\n */\nfunction updateChildren(parentDOM, oldVChildren, newVChildren) {\n  oldVChildren = (Array.isArray(oldVChildren) ? oldVChildren : [oldVChildren]).filter(item => item)\n  newVChildren = (Array.isArray(newVChildren) ? newVChildren : [newVChildren]).filter(item => item)\n\n+   // \u628a\u8001\u8282\u70b9\u653e\u5230\u4e00\u4e2a\u4ee5key\u4e3a\u5c5e\u6027\uff0c\u4ee5\u8282\u70b9\u4e3a\u503c\u7684\u6570\u7ec4\u91cc\n+   let keyedOldMap = {};\n+   let lastPlacedIndex = 0;\n+   oldVChildren.forEach((oldVChild, index) => {\n+     keyedOldMap[oldVChild.key || index] = oldVChild\n+   })\n+ \n+   // \u5b58\u653e\u8282\u70b9\u7684\u8865\u4e01\u5305\n+   let patch = []\n+   newVChildren.forEach((newVChild, index) => {\n+     let newKey = newVChild.key || index;\n+     let oldVChild = keyedOldMap[newKey]\n+     if (oldVChild) {\n+       // \u66f4\u65b0\u8001\u8282\u70b9\n+       updateElement(oldVChild, newVChild)\n+       if (oldVChild.mountIndex < lastPlacedIndex) { // \u8282\u70b9\u9700\u8981\u79fb\u52a8\u7684\u60c5\u51b5\n+         patch.push({\n+           type: MOVE,\n+           oldVChild,\n+           newVChild,\n+           mountIndex: index\n+         })\n+       }\n+       delete keyedOldMap[newKey]; // \u8282\u70b9\u590d\u7528\u4e86\uff0c\u5220\u9664 keyOldMap \u4e2d\u7684\u8282\u70b9\n+       lastPlacedIndex = Math.max(lastPlacedIndex, oldVChild.mountIndex);\n+     } else {\n+       patch.push({\n+         type: PLACEMENT,\n+         newVChild,\n+         mountIndex: index\n+       })\n+     }\n+   })\n+   // \u83b7\u53d6\u6240\u6709\u8981\u79fb\u52a8\u7684\u8001\u8282\u70b9\n+   let moveChild = patch.filter(action => action.type === MOVE).map(action => action.oldVChild)\n+   // \u628a\u5269\u4e0b\u7684\u6ca1\u6709\u590d\u7528\u5230\u7684\u8001\u8282\u70b9\u548c\u8981\u79fb\u52a8\u7684\u8282\u70b9\u5168\u90e8\u4eceDOM\u6811\u4e2d\u5220\u9664\n+   Object.values(keyedOldMap).concat(moveChild).forEach((oldVChild) => {\n+     let currentDOM = findDOM(oldVChild)\n+     parentDOM.removeChild(currentDOM)\n+   })\n+   if (patch) {\n+     patch.forEach(action => {\n+       let { type, oldVChild, newVChild, mountIndex } = action\n+       let childNodes = parentDOM.childNodes;\n+       let currentDOM;\n+       if (type === PLACEMENT) {\n+         currentDOM = createDOM(newVChild)\n+       } else if (type === MOVE) {\n+         currentDOM = findDOM(oldVChild)\n+       }\n+       let childNode = childNodes[mountIndex]\n+       if (childNode) {\n+         parentDOM.insertBefore(currentDOM, childNode)\n+       } else {\n+         parentDOM.appendChild(currentDOM)\n+       }\n+     })\n+   }\n+ }',lang:"diff"})))}));n["default"]=e=>{var n=a.a.useContext(d["context"]),t=n.demos;return a.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&d["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),a.a.createElement(o,{demos:t})}}}]);