(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[10],{oYbm:function(e,n,t){"use strict";t.r(n);var r=t("q1tI"),s=t.n(r),o=t("dEAq"),l=t("H1Ra"),i=s.a.memo((e=>{e.demos;return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"markdown"},s.a.createElement("h1",{id:"\u5b8c\u6210-promise-\u5b9e\u73b0"},s.a.createElement(o["AnchorLink"],{to:"#\u5b8c\u6210-promise-\u5b9e\u73b0","aria-hidden":"true",tabIndex:-1},s.a.createElement("span",{className:"icon icon-link"})),"\u5b8c\u6210 Promise \u5b9e\u73b0"),s.a.createElement(l["a"],{code:"const PENDING = \"PENDING\"; // \u9ed8\u8ba4\u7b49\u5f85\u6001\nconst FULFILLED = \"FULFILLED\";  // \u6210\u529f\u6001\nconst REJECT = \"REJECT\";  // \u5931\u8d25\u6001\n\nfunction resolvePromise(x, promise2, resolve, reject) { // \u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651 x \u53ef\u80fd\u662f\u522b\u4eba\u5bb6\u7684 promise\n  // \u5e0c\u671b\u6211\u7684 promise \u53ef\u4ee5\u548c\u522b\u4eba\u7684 promise \u4e00\u8d77\u6765\u6df7\u7528\u7684 q\u5e93 bluebird\u5e93\n\n  // If promise and x refer to the same object, reject promise with a TypeError as the reason.\n  if (x === promise2) {\n    // \u4e3a\u4ec0\u4e48\u8981\u62a5\u8fd9\u4e2a\u9519\u8bef\uff1f promise2 \u4f1a\u4e00\u76f4\u5904\u4e8e pending \u72b6\u6001\uff0c\u5c31\u5361\u6b7b\u4e86\u3002\n    return reject(new TypeError('\u5faa\u73af\u5f15\u7528'))\n  }\n\n  // \u7ee7\u7eed\u5224\u65ad x \u662f\u4e0d\u662f\u4e00\u4e2a promise, promise \u9700\u8981\u6709 then \u65b9\u6cd5(\u5565\u65f6\u5019\u662f\u51fd\u6570\u7684\uff1f\u522b\u4eba\u5199\u7684 promise \u5c31\u6709\u53ef\u80fd\u662f\u51fd\u6570)\n  if ((typeof x === 'object' && x !== null) || (typeof x === 'function')) {\n    // \u624d\u6709\u53ef\u80fd\u662f\u4e00\u4e2a promise\uff0c\u7ee7\u7eed\u5224\u65ad x \u662f\u5426\u6709then\n    let called\n    try {\n      let then = x.then  // \u5c1d\u8bd5\u53d6 then \u65b9\u6cd5\n      if (typeof then === 'function') { // \u6211\u5c31\u8ba4\u4e3a\u4ed6\u662f promise \u4e86\n        // x.then   // \u8fd9\u4e2a\u4f1a\u518d\u6b21\u53d6\u4e00\u6b21\u5c5e\u6027\uff0c\u89e6\u53d1 get \u65b9\u6cd5\n        // then.call(x) // \u8fd9\u4e2a\u4e0d\u4f1a\n        then.call(x, (y) => { // y \u6709\u53ef\u80fd\u8fd8\u662f\u4e00\u4e2a promise, \u6240\u4ee5\u8981\u518d\u6b21\u8fdb\u884c\u89e3\u6790\u6d41\u7a0b\n          if (called) return\n          called = true\n          // \u9700\u8981\u4e0d\u505c\u7684\u89e3\u6790\u6210\u529f\u7684 promise \u4e2d\u8fd4\u56de\u7684\u6210\u529f\u503c\uff0c\u76f4\u5230\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u666e\u901a\u503c\n          resolvePromise(y, promise2, resolve, reject)\n        }, (r) => {\n          if (called) return\n          called = true\n          reject(r)\n        })\n      } else {\n        if (called) return;\n        called = true;\n        resolve(x)\n      }\n    } catch(e) {\n      if (called) return\n      called = true\n      reject(e)\n    }\n  } else {\n    // x \u662f\u4e00\u4e2a\u666e\u901a\u503c\n    resolve(x)\n  }\n\n  // \u5982\u679cx\u662f\u4e00\u4e2a\u666e\u901a\u503c\u5219\u76f4\u63a5\u8c03\u7528resolve\u5373\u53ef\n\n  // \u5982\u679cx\u662f\u4e00\u4e2apromise\u90a3\u4e48\u5e94\u8be5\u91c7\u7528\u8fd9\u4e2apromise\u7684\u72b6\u6001\u51b3\u5b9a\u8c03\u7528\u7684\u662fresolve\u8fd8\u662freject\n}\n\nclass Promise {\n  constructor(executor) { // executor \u4f1a\u9ed8\u8ba4\u6267\u884c \u540c\u6b65\u6267\u884c\n    this.status = PENDING\n    this.value = undefined\n    this.reason = undefined\n\n    this.onResolvedCallbacks = []\n    this.onRejectedCallbacks = []\n     // \u7528\u6237\u8c03\u7528 resolve \u548c reject \u53ef\u4ee5\u5c06\u5bf9\u5e94\u7684\u7ed3\u679c\u66b4\u9732\u5728\u5f53\u524d\u7684 promise \u5b9e\u4f8b\u4e0a\n    const resolve = (value) => {\n      if (this.status === PENDING) {\n        this.value = value\n        this.status = FULFILLED\n        this.onResolvedCallbacks.forEach(fn => fn())\n      }\n    }\n\n    const reject = (reason) => {\n      if (this.status === PENDING) {\n        this.reason = reason\n        this.status = REJECT\n        this.onRejectedCallbacks.forEach(fn => fn())\n      }\n    }\n\n    try {\n      executor(resolve, reject); // \u9ed8\u8ba4 new Promise\u4e2d\u7684\u51fd\u6570\u4f1a\u7acb\u5373\u6267\u884c\n    } catch (e) { // \u5982\u679c\u6267\u884c\u65f6\u51fa\u9519\uff0c\u6211\u4eec\u5c06\u9519\u8bef\u4f20\u9012\u5230 reject \u4e2d =\u300b \u6267\u884c\u5230\u4e86\u5931\u8d25\u903b\u8f91\n      reject(e)\n    }\n  }\n\n  then(onFulfilled, onRejected) {\n    onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : v => v\n    onRejected = typeof onRejected === 'function' ? onRejected : e => { throw e }\n    // \u6bcf\u6b21\u8c03\u7528 then \u65b9\u6cd5\uff0c\u90fd\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u5168\u65b0\u7684 promise\n    let promise2 = new Promise((resolve, reject) => {\n      // NOTE: x \u5c31\u662f\u4e0a\u4e00\u4e2a then \u6210\u529f\u6216\u8005\u5931\u8d25\u7684\u8fd4\u56de\u503c\uff0c\u8fd9\u4e2a x \u51b3\u5b9a promise2 \u8d70\u6210\u529f\u8fd8\u662f\u8d70\u5931\u8d25\n      if (this.status === FULFILLED) {\n        setTimeout(() => {\n          try {\n            let x = onFulfilled(this.value)\n            resolvePromise(x, promise2, resolve, reject)\n          } catch(e) {\n            reject(e)\n          }\n        }, 0)\n      }\n\n      if (this.status === REJECT) {\n        setTimeout(() => {\n          try {\n            let x = onRejected(this.reason)\n            resolvePromise(x, promise2, resolve, reject)\n          } catch (e) {\n            reject(e)\n          }\n        }, 0)\n      }\n\n      if (this.status === PENDING) {\n        console.log('pending')\n        // \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\n        this.onResolvedCallbacks.push(() => {\n          setTimeout(() => {\n            try {\n              let x = onFulfilled(this.value)\n              resolvePromise(x, promise2, resolve, reject)\n            } catch(e) {\n              reject(e)\n            }\n          }, 0)\n        })\n        this.onRejectedCallbacks.push(() => {\n          setTimeout(() => {\n            try {\n              let x = onRejected(this.reason)\n              resolvePromise(x, promise2, resolve, reject)\n            } catch (e) {\n              reject(e)\n            }\n          }, 0)\n        })\n      }\n    })\n    return promise2\n  }\n}\n\n// \u6d4b\u8bd5 promise A+ \u89c4\u8303\n// npm install -g promises-aplus-tests\nPromise.defer = Promise.deferred = function() {\n  let dfd = {};\n  dfd.promise = new Promise((resolve, reject) => {\n    dfd.resolve = resolve\n    dfd.reject = reject\n  })\n  return dfd\n}\n\nmodule.exports = Promise",lang:"js"})))}));n["default"]=e=>{var n=s.a.useContext(o["context"]),t=n.demos;return s.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&o["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),s.a.createElement(i,{demos:t})}}}]);