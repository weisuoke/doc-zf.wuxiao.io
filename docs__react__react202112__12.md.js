(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[21],{Jplx:function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),s=n.n(a),r=n("dEAq"),o=n("H1Ra"),c=s.a.memo((e=>{e.demos;return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"markdown"},s.a.createElement("h1",{id:"\u5b9e\u73b0\u65b0\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5"},s.a.createElement(r["AnchorLink"],{to:"#\u5b9e\u73b0\u65b0\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5","aria-hidden":"true",tabIndex:-1},s.a.createElement("span",{className:"icon icon-link"})),"\u5b9e\u73b0\u65b0\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5"),s.a.createElement("p",null,s.a.createElement("img",{src:"http://wuxiao-tech-doc.oss-cn-hangzhou.aliyuncs.com/2022-01-30-101005.jpg",alt:"react16_1626532331619"})),s.a.createElement("h2",{id:"getderivedstatefromprops"},s.a.createElement(r["AnchorLink"],{to:"#getderivedstatefromprops","aria-hidden":"true",tabIndex:-1},s.a.createElement("span",{className:"icon icon-link"})),"getDerivedStateFromProps"),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement("code",null,"static getDerivedStateFromProps(props, state)")," \u8fd9\u4e2a\u751f\u547d\u5468\u671f\u7684\u529f\u80fd\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u4f20\u5165\u7684props\u6620\u5c04\u5230state\u4e0a\u9762")),s.a.createElement(o["a"],{code:"import React from 'react';\nimport ReactDOM from 'react-dom';\nclass Counter extends React.Component{\n    static defaultProps = {\n        name: '\u73e0\u5cf0\u67b6\u6784'\n    };\n    constructor(props) {\n        super(props);\n        this.state = { number: 0 }\n    }\n\n    handleClick = () => {\n        this.setState({ number: this.state.number + 1 });\n    };\n\n    render() {\n        console.log('3.render');\n        return (\n            <div>\n                <p>{this.state.number}</p>\n                <ChildCounter number={this.state.number} />\n                <button onClick={this.handleClick}>+</button>\n            </div>\n        )\n    }\n}\nclass ChildCounter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { number: 0 };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { count } = nextProps;\n        // \u5f53\u4f20\u5165\u7684type\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u66f4\u65b0state\n        if (count % 2 === 0) {\n            return { number: number * 2 };\n        } else {\n            return { number: number * 3 };\n        }\n    }\n    render() {\n        console.log('child-render', this.state)\n        return (<div>\n            {this.state.number}\n        </div>)\n    }\n\n}\n\nReactDOM.render(\n    <Counter />,\n    document.getElementById('root')\n);",lang:"js"}),s.a.createElement("h2",{id:"getsnapshotbeforeupdate"},s.a.createElement(r["AnchorLink"],{to:"#getsnapshotbeforeupdate","aria-hidden":"true",tabIndex:-1},s.a.createElement("span",{className:"icon icon-link"})),"getSnapshotBeforeUpdate"),s.a.createElement("ul",null,s.a.createElement("li",null,"getSnapshotBeforeUpdate() \u88ab\u8c03\u7528\u4e8erender\u4e4b\u540e\uff0c\u53ef\u4ee5\u8bfb\u53d6\u4f46\u65e0\u6cd5\u4f7f\u7528DOM\u7684\u65f6\u5019\u3002\u5b83\u4f7f\u60a8\u7684\u7ec4\u4ef6\u53ef\u4ee5\u5728\u53ef\u80fd\u66f4\u6539\u4e4b\u524d\u4eceDOM\u6355\u83b7\u4e00\u4e9b\u4fe1\u606f\uff08\u4f8b\u5982\u6eda\u52a8\u4f4d\u7f6e\uff09\u3002\u6b64\u751f\u547d\u5468\u671f\u8fd4\u56de\u7684\u4efb\u4f55\u503c\u90fd\u5c06\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9componentDidUpdate()")),s.a.createElement(o["a"],{code:"import React from './react';\nimport ReactDOM from './react-dom';\nclass ScrollingList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { messages: [] }\n        this.wrapper = React.createRef();\n    }\n\n    addMessage() {\n        this.setState(state => ({\n            messages: [`${state.messages.length}`, ...state.messages],\n        }))\n    }\n    componentDidMount() {\n        this.timeID = window.setInterval(() => {//\u8bbe\u7f6e\u5b9a\u65f6\u5668\n            this.addMessage();\n        }, 1000)\n    }\n    componentWillUnmount() {//\u6e05\u9664\u5b9a\u65f6\u5668\n        window.clearInterval(this.timeID);\n    }\n    getSnapshotBeforeUpdate() {//\u5f88\u5173\u952e\u7684\uff0c\u6211\u4eec\u83b7\u53d6\u5f53\u524drootNode\u7684scrollHeight\uff0c\u4f20\u5230componentDidUpdate \u7684\u53c2\u6570perScrollHeight\n        return {prevScrollTop:this.wrapper.current.scrollTop,prevScrollHeight:this.wrapper.current.scrollHeight};\n    }\n    componentDidUpdate(pervProps, pervState, {prevScrollHeight,prevScrollTop}) {\n        //\u5f53\u524d\u5411\u4e0a\u5377\u53bb\u7684\u9ad8\u5ea6\u52a0\u4e0a\u589e\u52a0\u7684\u5185\u5bb9\u9ad8\u5ea6\n        this.wrapper.current.scrollTop = prevScrollTop + (this.wrapper.current.scrollHeight - prevScrollHeight);\n    }\n    render() {\n        let style = {\n            height: '100px',\n            width: '200px',\n            border: '1px solid red',\n            overflow: 'auto'\n        }\n        //<div key={index}>\u91cc\u4e0d\u8981\u52a0\u7a7a\u683c!\n        return (\n            <div style={style} ref={this.wrapper} >\n                {this.state.messages.map((message, index) => (\n                    <div key={index}>{message}</div>\n                ))}\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <ScrollingList />,\n    document.getElementById('root')\n);",lang:"js"}),s.a.createElement("h2",{id:"\u5b9e\u73b0"},s.a.createElement(r["AnchorLink"],{to:"#\u5b9e\u73b0","aria-hidden":"true",tabIndex:-1},s.a.createElement("span",{className:"icon icon-link"})),"\u5b9e\u73b0"),s.a.createElement("h4",{id:"srccomponentjs"},s.a.createElement(r["AnchorLink"],{to:"#srccomponentjs","aria-hidden":"true",tabIndex:-1},s.a.createElement("span",{className:"icon icon-link"})),"src\\Component.js"),s.a.createElement(o["a"],{code:"import { findDOM, compareTwoVdom } from './react-dom';\nexport let updateQueue = {\n    isBatchingUpdate: false,\n    updaters: [],\n    batchUpdate() {//\u6279\u91cf\u66f4\u65b0\n        updateQueue.isBatchingUpdate = false;\n        for (let updater of updateQueue.updaters) {\n            updater.updateComponent();\n        }\n        updateQueue.updaters.length = 0;\n    }\n}\nclass Updater {\n    constructor(classInstance) {\n        this.classInstance = classInstance;\n        this.pendingStates = [];\n        this.callbacks = [];\n    }\n    addState(partialState, callback) {\n        this.pendingStates.push(partialState);///\u7b49\u5f85\u66f4\u65b0\u7684\u6216\u8005\u8bf4\u7b49\u5f85\u751f\u6548\u7684\u72b6\u6001\n        if (typeof callback === 'function')\n            this.callbacks.push(callback);//\u72b6\u6001\u66f4\u65b0\u540e\u7684\u56de\u8c03\n        this.emitUpdate();\n    }\n    emitUpdate(nextProps) {\n        this.nextProps = nextProps;\n        if (updateQueue.isBatchingUpdate) {\n            updateQueue.updaters.push(this);\n        } else {\n            this.updateComponent();\n        }\n    }\n    updateComponent() {\n        let { classInstance, pendingStates } = this;\n        if (this.nextProps || pendingStates.length > 0) {\n            shouldUpdate(classInstance, this.nextProps, this.getState());\n        }\n    }\n    getState() {\n        let { classInstance, pendingStates } = this;\n        let { state } = classInstance;\n        pendingStates.forEach((nextState) => {\n            if (typeof nextState === 'function') {\n                nextState = nextState(state);\n            }\n            state = { ...state, ...nextState };\n        });\n        pendingStates.length = 0;\n        return state;\n    }\n}\nfunction shouldUpdate(classInstance, nextProps, nextState) {\n    let willUpdate = true;\n    if (classInstance.shouldComponentUpdate\n        && !classInstance.shouldComponentUpdate(nextProps, nextState)) {\n        willUpdate = false;\n    }\n    if (willUpdate && classInstance.componentWillUpdate) {\n        classInstance.componentWillUpdate();\n    }\n    if (nextProps) {\n        classInstance.props = nextProps;\n    }\n    classInstance.state = nextState;\n    if (willUpdate) classInstance.forceUpdate();\n}\nexport class Component {\n    static isReactComponent = true;\n    constructor(props) {\n        this.props = props;\n        this.state = {};\n        this.updater = new Updater(this);\n    }\n    setState(partialState, callback) {\n        this.updater.addState(partialState, callback);\n    }\n    forceUpdate() {\n        let oldRenderVdom = this.oldRenderVdom;\n        let oldDOM = findDOM(oldRenderVdom);\n+        if (this.constructor.getDerivedStateFromProps) {\n+            let newState = this.constructor.getDerivedStateFromProps(this.props, this.state);\n+            if (newState)\n+                this.state =  { ...this.state, ...newState };\n+        }\n+       let snapshot = this.getSnapshotBeforeUpdate && this.getSnapshotBeforeUpdate();\n        let newRenderVdom = this.render();\n        compareTwoVdom(oldDOM.parentNode, oldRenderVdom, newRenderVdom);\n        this.oldRenderVdom = newRenderVdom;\n        if (this.componentDidUpdate) {\n+            this.componentDidUpdate(this.props, this.state, snapshot);\n        }\n    }\n}",lang:"diff"})))}));t["default"]=e=>{var t=s.a.useContext(r["context"]),n=t.demos;return s.a.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&r["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),s.a.createElement(c,{demos:n})}}}]);