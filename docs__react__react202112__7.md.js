(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[53],{QmzL:function(e,n,t){"use strict";t.r(n);var r=t("q1tI"),o=t.n(r),a=t("dEAq"),c=t("H1Ra"),l=o.a.memo((e=>{e.demos;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"ref"},o.a.createElement(a["AnchorLink"],{to:"#ref","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Ref"),o.a.createElement("ul",null,o.a.createElement("li",null,"Refs \u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\uff0c\u5141\u8bb8\u6211\u4eec\u8bbf\u95ee DOM \u8282\u70b9\u6216\u5728 render \u65b9\u6cd5\u4e2d\u521b\u5efa\u7684 React \u5143\u7d20")),o.a.createElement("h2",{id:"\u4e3a-dom-\u5143\u7d20\u6dfb\u52a0-ref"},o.a.createElement(a["AnchorLink"],{to:"#\u4e3a-dom-\u5143\u7d20\u6dfb\u52a0-ref","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"\u4e3a DOM \u5143\u7d20\u6dfb\u52a0 ref"),o.a.createElement("ul",null,o.a.createElement("li",null,"\u53ef\u4ee5\u4f7f\u7528 ref \u53bb\u5b58\u50a8 DOM \u8282\u70b9\u7684\u5f15\u7528"),o.a.createElement("li",null,"\u5f53 ref \u5c5e\u6027\u7528\u4e8e HTML \u5143\u7d20\u65f6\uff0c\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528 React.createRef() \u521b\u5efa\u7684 ref \u63a5\u6536\u5e95\u5c42 DOM \u5143\u7d20\u4f5c\u4e3a\u5176 current \u5c5e\u6027")),o.a.createElement("p",null,"src\\index.js"),o.a.createElement(c["a"],{code:"import React from 'react';\nimport ReactDOM from 'react-dom';\nclass Sum extends React.Component {\n    a\n    b\n    result\n    constructor(props) {\n        super(props);\n        this.a = React.createRef();\n        this.b = React.createRef();\n        this.result = React.createRef();\n    }\n    handleAdd = () => {\n        let a = this.a.current.value;\n        let b = this.b.current.value;\n        this.result.current.value = a + b;\n    }\n    render() {\n        return (\n            <>\n                <input ref={this.a} />+<input ref={this.b} /><button onClick={this.handleAdd}>=</button><input ref={this.result} />\n            </>\n        );\n    }\n}\nReactDOM.render(\n    <Sum />,\n    document.getElementById('root')\n);",lang:"js"}),o.a.createElement("h2",{id:"\u4e3a-class-\u7ec4\u4ef6\u6dfb\u52a0-ref"},o.a.createElement(a["AnchorLink"],{to:"#\u4e3a-class-\u7ec4\u4ef6\u6dfb\u52a0-ref","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"\u4e3a class \u7ec4\u4ef6\u6dfb\u52a0 Ref"),o.a.createElement("ul",null,o.a.createElement("li",null,"\u5f53 ref \u5c5e\u6027\u7528\u4e8e\u81ea\u5b9a\u4e49 class \u7ec4\u4ef6\u65f6\uff0cref \u5bf9\u8c61\u63a5\u6536\u7ec4\u4ef6\u7684\u6302\u8f7d\u5b9e\u4f8b\u4f5c\u4e3a\u5176 current \u5c5e\u6027")),o.a.createElement("p",null,"src\\index.js"),o.a.createElement(c["a"],{code:"import React from 'react';\nimport ReactDOM from 'react-dom';\nclass Form extends React.Component {\n    input\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n    }\n    getFocus = () => {\n        this.input.current.getFocus();\n    }\n    render() {\n        return (\n            <>\n                <TextInput ref={this.input} />\n                <button onClick={this.getFocus}>\u83b7\u5f97\u7126\u70b9</button>\n            </>\n        );\n    }\n}\nclass TextInput extends React.Component {\n    input\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n    }\n    getFocus = () => {\n        this.input.current.focus();\n    }\n    render() {\n        return <input ref={this.input} />\n    }\n}\nReactDOM.render(\n    <Form />,\n    document.getElementById('root')\n);",lang:"js"}),o.a.createElement("h2",{id:"ref\u8f6c\u53d1"},o.a.createElement(a["AnchorLink"],{to:"#ref\u8f6c\u53d1","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Ref\u8f6c\u53d1"),o.a.createElement("ul",null,o.a.createElement("li",null,"\u4f60\u4e0d\u80fd\u5728\u51fd\u6570\u7ec4\u4ef6\u4e0a\u4f7f\u7528 ref \u5c5e\u6027\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u5b9e\u4f8b"),o.a.createElement("li",null,"Ref \u8f6c\u53d1\u662f\u4e00\u9879\u5c06 ref \u81ea\u52a8\u5730\u901a\u8fc7\u7ec4\u4ef6\u4f20\u9012\u5230\u5176\u4e00\u5b50\u7ec4\u4ef6\u7684\u6280\u5de7"),o.a.createElement("li",null,"Ref \u8f6c\u53d1\u5141\u8bb8\u67d0\u4e9b\u7ec4\u4ef6\u63a5\u6536 ref\uff0c\u5e76\u5c06\u5176\u5411\u4e0b\u4f20\u9012\u7ed9\u5b50\u7ec4\u4ef6")),o.a.createElement("p",null,"src/index.js"),o.a.createElement(c["a"],{code:"import React from 'react';\nimport ReactDOM from 'react-dom';\ninterface InputProps { }\nconst TextInput = React.forwardRef((props, ref) => (\n    <input ref={ref} />\n));\nclass Form extends React.Component {\n    input\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n    }\n    getFocus = () => {\n        console.log(this.input.current);\n\n        this.input.current.focus();\n    }\n    render() {\n        return (\n            <>\n                <TextInput ref={this.input} />\n                <button onClick={this.getFocus}>\u83b7\u5f97\u7126\u70b9</button>\n            </>\n        );\n    }\n}\n\nReactDOM.render(\n    <Form />,\n    document.getElementById('root')\n);",lang:"js"}),o.a.createElement("h2",{id:"ref\u5b9e\u73b0"},o.a.createElement(a["AnchorLink"],{to:"#ref\u5b9e\u73b0","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"ref\u5b9e\u73b0"),o.a.createElement("h4",{id:"srcconstantsjs"},o.a.createElement(a["AnchorLink"],{to:"#srcconstantsjs","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"src\\constants.js"),o.a.createElement(c["a"],{code:"export const REACT_TEXT = Symbol('REACT_TEXT');\n+export const REACT_FORWARD_REF_TYPE = Symbol('react.forward_ref');",lang:"diff"}),o.a.createElement("h4",{id:"srcreactjs"},o.a.createElement(a["AnchorLink"],{to:"#srcreactjs","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"src\\react.js"),o.a.createElement("p",null,"src\\react.js"),o.a.createElement(c["a"],{code:"import { wrapToVdom } from \"./utils\";\nimport {Component} from './Component';\nfunction createElement(type, config, children) {\n  let ref;\n  let key;\n  if (config) {\n    delete config.__source;\n    delete config.__self;\n    ref = config.ref;\n    delete config.ref;\n    key = config.key;\n    delete config.key;\n  }\n  let props = { ...config };\n  if (arguments.length > 3) {\n    props.children = Array.prototype.slice.call(arguments, 2).map(wrapToVdom);\n  } else {\n    props.children = wrapToVdom(children);\n  }\n  return {\n    type,\n    ref,\n    key,\n    props,\n  };\n}\n+function createRef(){\n+    return {current:null};\n+}\n+function forwardRef(render) {  \n+  var elementType = {\n+    $$typeof: REACT_FORWARD_REF_TYPE,\n+    render: render\n+  };\n+  return elementType;\n+}\nconst React = {\n  createElement,\n  Component,\n+ createRef\n};\nexport default React;",lang:"diff"}),o.a.createElement("h4",{id:"react-domjs"},o.a.createElement(a["AnchorLink"],{to:"#react-domjs","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"react-dom.js"),o.a.createElement("p",null,"src\\react-dom.js"),o.a.createElement(c["a"],{code:"+import {REACT_TEXT,REACT_FORWARD_REF_TYPE} from './constants';\nimport { addEvent } from './event';\nfunction render(vdom, parentDOM) {\n    let newDOM = createDOM(vdom)\n    if (newDOM) {\n        parentDOM.appendChild(newDOM);\n    }\n}\nexport function createDOM(vdom) {\n+ let { type, props,ref } = vdom;\n  let dom;\n+ if(type&&type.$$typeof===REACT_FORWARD_REF_TYPE){\n+   return mountForwardComponent(vdom);\n  }else if (type === REACT_TEXT) {\n    dom = document.createTextNode(props);\n  } else if (typeof type === \"function\") {\n    if (type.isReactComponent) {\n      return mountClassComponent(vdom);\n    } else {\n      return mountFunctionComponent(vdom);\n    }\n  } else {\n    dom = document.createElement(type);\n  }\n  if (props) {\n    updateProps(dom, {}, props);\n    if (typeof props.children == \"object\" && props.children.type) {\n      mount(props.children, dom);\n    } else if (Array.isArray(props.children)) {\n      reconcileChildren(props.children, dom);\n    }\n  }\n  vdom.dom = dom;\n+ if(ref) ref.current = dom;\n  return dom;\n}\n+function mountForwardComponent(vdom){\n+    let {type,props,ref} = vdom;\n+    let renderVdom = type.render(props,ref);\n+    vdom.oldRenderVdom = renderVdom;\n+    return createDOM(renderVdom);\n+}\nfunction mountClassComponent(vdom) {\n+ let { type, props,ref } = vdom;\n  let classInstance = new type(props);\n+ if(ref) ref.current = classInstance;\n  let renderVdom = classInstance.render();\n  classInstance.oldRenderVdom = renderVdom;\n  let dom = createDOM(renderVdom);\n  return dom;\n}\nfunction mountFunctionComponent(vdom) {\n  let { type, props } = vdom;\n  let renderVdom = type(props);\n  vdom.oldRenderVdom = renderVdom;\n  return createDOM(renderVdom);\n}\nfunction updateProps(dom, oldProps={}, newProps={}) {\n    for (let key in newProps) {\n        if (key === 'children') {\n            continue;\n        } else if (key === 'style') {\n            let styleObj = newProps[key];\n            for (let attr in styleObj) {\n                dom.style[attr] = styleObj[attr];\n            }\n        } else if (key.startsWith('on')) {\n            addEvent(dom, key.toLocaleLowerCase(), newProps[key]);\n        } else {\n            dom[key] = newProps[key];\n        }\n    }\n    for(let key in oldProps){\n        if(!newProps.hasOwnProperty(key)){\n            dom[key] = null;\n        }\n    }\n}\nexport function findDOM(vdom){\n    let {type}= vdom;\n    let dom;\n    if(typeof type === 'function'){\n        dom=findDOM(vdom.oldRenderVdom);\n    }else{\n        dom=vdom.dom;\n    }\n    return dom;\n}\nexport function compareTwoVdom(parentDOM, oldVdom, newVdom) {\n    let oldDOM = findDOM(oldVdom);\n    let newDOM = createDOM(newVdom);\n    parentDOM.replaceChild(newDOM, oldDOM);\n}\nfunction reconcileChildren(childrenVdom, parentDOM) {\n  for (let i = 0; i < childrenVdom.length; i++) {\n    let childVdom = childrenVdom[i];\n    mount(childVdom, parentDOM);\n  }\n}\nconst ReactDOM = {\n  render,\n};\nexport default ReactDOM;",lang:"diff"})))}));n["default"]=e=>{var n=o.a.useContext(a["context"]),t=n.demos;return o.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),o.a.createElement(l,{demos:t})}}}]);